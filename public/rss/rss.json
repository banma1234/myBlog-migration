{
    "version": "https://jsonfeed.org/version/1",
    "title": "ChocoHam 개발 블로그",
    "home_page_url": "http://localhost:3000",
    "feed_url": "http://localhost:3000/rss/feed.json",
    "description": "프론트앤드 개발자 ChocoHam(@banma1234)의 개발 & 디자인 블로그입니다. 주로 웹개발 관련 포스트가 올라오며 가끔 디자인/일러스트 관련 포스트 또한 올라옵니다.",
    "icon": "https://choco-image-server.cdn.ntruss.com/images/banner.png",
    "author": {
        "name": "ChocoHam(@banma1234)",
        "url": "https://github.com/banma1234"
    },
    "items": [
        {
            "content_html": "백준 1256 : 사전. 해당 문제는 같은 자료를 반복해서 참고해야 하기 때문에 dp(dynamic programming)를 이용해 시간복잡도를 줄여 문제를 해결할 수 있다.",
            "url": "http://localhost:3000/posts/1",
            "title": "[python]백준_1256 : 사전",
            "summary": "백준 1256 : 사전. 해당 문제는 같은 자료를 반복해서 참고해야 하기 때문에 dp(dynamic programming)를 이용해 시간복잡도를 줄여 문제를 해결할 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/python.webp",
            "date_modified": "2023-03-21T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "python",
                "알고리즘",
                "백준",
                "dp"
            ]
        },
        {
            "content_html": "python 모듈인 snscrape, wordCloud 모듈을 이용해 twitter에서 특정 키워드가 포함된 트윗을 크롤링하여 언급 빈도수에 따라 시각화된 자료를 생성할 수 있다.",
            "url": "http://localhost:3000/posts/2",
            "title": "[python] snscrape를 이용한 웹크롤링 및 데이터 시각화",
            "summary": "python 모듈인 snscrape, wordCloud 모듈을 이용해 twitter에서 특정 키워드가 포함된 트윗을 크롤링하여 언급 빈도수에 따라 시각화된 자료를 생성할 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/images/webCrawl_1.webp",
            "date_modified": "2023-03-21T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "python",
                "빅데이터",
                "웹크롤링",
                "snscrape"
            ]
        },
        {
            "content_html": "객체를 지향한다는 것은 객체의 역할, 책임, 협력에 집중한다는 것이다. 결국 객체지향이란 상호작용하는 자율적인 객체들의 공동체를 통해 시스템을 분할하는 방법이다.",
            "url": "http://localhost:3000/posts/3",
            "title": "[코어자바스크립트] 변수 선언과 데이터 할당",
            "summary": "객체를 지향한다는 것은 객체의 역할, 책임, 협력에 집중한다는 것이다. 결국 객체지향이란 상호작용하는 자율적인 객체들의 공동체를 통해 시스템을 분할하는 방법이다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/default/default_thumbnail.svg",
            "date_modified": "2023-03-21T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "javascript",
                "js",
                "메모리",
                "책",
                "코어자바스크립트"
            ]
        },
        {
            "content_html": "[python] 백준 1456 : 거의 소수. 해당 문제는 에라토스테네스의 채를 이용해 소수를 판별, 시간복잡도를 줄여 문제를 해결할 수 있다.",
            "url": "http://localhost:3000/posts/4",
            "title": "[python]백준_1456 : 거의 소수",
            "summary": "[python] 백준 1456 : 거의 소수. 해당 문제는 에라토스테네스의 채를 이용해 소수를 판별, 시간복잡도를 줄여 문제를 해결할 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/python.webp",
            "date_modified": "2023-04-11T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "python",
                "algorithm",
                "백준",
                "소수",
                "수학"
            ]
        },
        {
            "content_html": "프로그래머스 lv.0 옹알이(1) 풀이 with javascript : 정규표현식을 활용하여 특정 패턴(옹알이)를 검사하는 로직을 작성하면 되겠다.",
            "url": "http://localhost:3000/posts/5",
            "title": "[lv.0] 옹알이(1) | 프로그래머스",
            "summary": "프로그래머스 lv.0 옹알이(1) 풀이 with javascript : 정규표현식을 활용하여 특정 패턴(옹알이)를 검사하는 로직을 작성하면 되겠다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-04-20T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "정규표현식",
                "알고리즘",
                "코딩테스트"
            ]
        },
        {
            "content_html": "프로그래머스 lv.0 다음에 올 숫자 풀이 with javascript. 예외처리를 신경 쓸 필요 없이 등차수열인가 등비수열인가만 판단하여 문제를 해결할 수 있다.",
            "url": "http://localhost:3000/posts/6",
            "title": "[lv.0] 다음에 올 숫자 | 프로그래머스",
            "summary": "프로그래머스 lv.0 다음에 올 숫자 풀이 with javascript. 예외처리를 신경 쓸 필요 없이 등차수열인가 등비수열인가만 판단하여 문제를 해결할 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-04-20T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘",
                "math"
            ]
        },
        {
            "content_html": "javascript로 이해하는 자료구조 [스택(stack)] : 스택(stack)은 데이터를 입력할 수 있는 선형 자료형으로 선입후출의 구조를 가지며 ctrl+z와 같은 기능에서 요구되는 자료형이다. javascript에서는 배열을 이용해 손쉽게 구현할 수 있다.",
            "url": "http://localhost:3000/posts/7",
            "title": "[자료구조] 스택(Stack) | javascript",
            "summary": "javascript로 이해하는 자료구조 [스택(stack)] : 스택(stack)은 데이터를 입력할 수 있는 선형 자료형으로 선입후출의 구조를 가지며 ctrl+z와 같은 기능에서 요구되는 자료형이다. javascript에서는 배열을 이용해 손쉽게 구현할 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_dataStructure.webp",
            "date_modified": "2023-04-20T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "자료구조",
                "JS",
                "javascript",
                "스택",
                "Stack"
            ]
        },
        {
            "content_html": "javascript로 이해하는 자료구조 [큐(queue)] : 큐(queue)는 데이터를 입력할 수 있는 선형 자료형으로 선입선출의 구조를 가진다. 버퍼링과 같은 기능에서 요구되는 자료형이다. javascript에서는 배열을 이용해 손쉽게 구현할 수 있다.",
            "url": "http://localhost:3000/posts/8",
            "title": "[자료구조] 큐(Queue) | javascript",
            "summary": "javascript로 이해하는 자료구조 [큐(queue)] : 큐(queue)는 데이터를 입력할 수 있는 선형 자료형으로 선입선출의 구조를 가진다. 버퍼링과 같은 기능에서 요구되는 자료형이다. javascript에서는 배열을 이용해 손쉽게 구현할 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_dataStructure.webp",
            "date_modified": "2023-04-20T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "자료구조",
                "Js",
                "javascript",
                "큐",
                "Queue"
            ]
        },
        {
            "content_html": "프로그래머스 lv.0 평행 풀이 with javascript. 주어진 좌표중 두 쌍의 기울기가 일치할 경우 평행하다고 볼 수 있다. 이때 결과값이 중복될 수 있으므로 이를 유의해야 한다.",
            "url": "http://localhost:3000/posts/9",
            "title": "[lv.0] 평행 | 프로그래머스",
            "summary": "프로그래머스 lv.0 평행 풀이 with javascript. 주어진 좌표중 두 쌍의 기울기가 일치할 경우 평행하다고 볼 수 있다. 이때 결과값이 중복될 수 있으므로 이를 유의해야 한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-04-20T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘",
                "이중배열"
            ]
        },
        {
            "content_html": "프로그래머스 lv.0 겹치는 선분의 길이 풀이 with javascript. 각 선분이 포함된 숫자가 겹칠 경우 해당 부분이 겹쳐졌다 볼 수 있다. 각 좌표의 a 부터 b 까지의 숫자를 쪼개서 저장한 후 다음 좌표의 a 부터 b까지의 숫자와 얼마나 일치하는지 비교해야 한다.",
            "url": "http://localhost:3000/posts/10",
            "title": "[lv.0] 겹치는 선분의 길이 | 프로그래머스",
            "summary": "프로그래머스 lv.0 겹치는 선분의 길이 풀이 with javascript. 각 선분이 포함된 숫자가 겹칠 경우 해당 부분이 겹쳐졌다 볼 수 있다. 각 좌표의 a 부터 b 까지의 숫자를 쪼개서 저장한 후 다음 좌표의 a 부터 b까지의 숫자와 얼마나 일치하는지 비교해야 한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-04-20T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘"
            ]
        },
        {
            "content_html": "프로그래머스 lv.0 OX 퀴즈 풀이 with javascript. 연산 기호와 숫자 사이에는 항상 공백이 존재하므로 javascript의 .split() 메소드를 이용해 분리하여 새로운 배열로 초기화, 계산을 진행한다.",
            "url": "http://localhost:3000/posts/11",
            "title": "[lv.0] OX 퀴즈 | 프로그래머스",
            "summary": "프로그래머스 lv.0 OX 퀴즈 풀이 with javascript. 연산 기호와 숫자 사이에는 항상 공백이 존재하므로 javascript의 .split() 메소드를 이용해 분리하여 새로운 배열로 초기화, 계산을 진행한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-04-20T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "알고리즘",
                "코딩테스트"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 나머지가 1이 되는 수 찾기 풀이 with javascript. 주어진 n이 홀수인지 짝수인지에 따라 로직을 분리하여 작성한다. n이 홀수일 경우 x는 무조건 2이며 짝수인 경우 x는 반드시 홀수인 점을 이용한다.",
            "url": "http://localhost:3000/posts/12",
            "title": "[lv.1] 나머지가 1이 되는 수 찾기 | 프로그래머스",
            "summary": "프로그래머스 lv.1 나머지가 1이 되는 수 찾기 풀이 with javascript. 주어진 n이 홀수인지 짝수인지에 따라 로직을 분리하여 작성한다. n이 홀수일 경우 x는 무조건 2이며 짝수인 경우 x는 반드시 홀수인 점을 이용한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-04-20T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "알고리즘",
                "코딩테스트"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 삼총사 풀이 with javascript. 중복 제거를 위해 Set자료형에 number의 원소들을 초기화한 후 브루트포스 계산법으로 count를 구해주면 되겠다.",
            "url": "http://localhost:3000/posts/13",
            "title": "[lv.1] 삼총사 | 프로그래머스",
            "summary": "프로그래머스 lv.1 삼총사 풀이 with javascript. 중복 제거를 위해 Set자료형에 number의 원소들을 초기화한 후 브루트포스 계산법으로 count를 구해주면 되겠다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-04-21T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "알고리즘",
                "코딩테스트",
                "브루트포스"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 삼총사 풀이 with javascript. 중복 제거를 위해 javascript의 Set 자료형을 이용, 완전탐색(브루트포스)로 count를 계산하여 문제를 해결한다.",
            "url": "http://localhost:3000/posts/14",
            "title": "[lv.1] 크기가 작은 부분 문자열 | 프로그래머스",
            "summary": "프로그래머스 lv.1 삼총사 풀이 with javascript. 중복 제거를 위해 javascript의 Set 자료형을 이용, 완전탐색(브루트포스)로 count를 계산하여 문제를 해결한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-04-21T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "알고리즘",
                "코딩테스트",
                "문자열"
            ]
        },
        {
            "content_html": "javascript로 이해하는 자료구조 [덱(deque)] : 덱(deque)은 스택(stack)과 큐(queue)를 합친 자료구조로 head, tail 구분 없이 양방향에서 자료를 입출력 할 수 있는 자료형이다. javascript에서는 배열을 이용해 손쉽게 구현할 수 있다.",
            "url": "http://localhost:3000/posts/15",
            "title": "[자료구조] 덱(Deque) | javascript",
            "summary": "javascript로 이해하는 자료구조 [덱(deque)] : 덱(deque)은 스택(stack)과 큐(queue)를 합친 자료구조로 head, tail 구분 없이 양방향에서 자료를 입출력 할 수 있는 자료형이다. javascript에서는 배열을 이용해 손쉽게 구현할 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_dataStructure.webp",
            "date_modified": "2023-04-21T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "자료구조",
                "JS",
                "javascript",
                "덱",
                "Deque"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 기사단원의 무기 풀이 with javascript. 약수의 개수를 주어진 number만큼. 즉 최대 10,000번 구해야 하기 때문에 제곱근을 이용해 약수의 개수를 구하는 알고리즘을 이용, 시간복잡도를 줄인다. javascript에서는 Math.sqrt() 메소드를 이용해 제곱근을 구할 수 있다.",
            "url": "http://localhost:3000/posts/16",
            "title": "[lv.1] 기사단원의 무기 | 프로그래머스",
            "summary": "프로그래머스 lv.1 기사단원의 무기 풀이 with javascript. 약수의 개수를 주어진 number만큼. 즉 최대 10,000번 구해야 하기 때문에 제곱근을 이용해 약수의 개수를 구하는 알고리즘을 이용, 시간복잡도를 줄인다. javascript에서는 Math.sqrt() 메소드를 이용해 제곱근을 구할 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-04-25T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "알고리즘",
                "코딩테스트",
                "약수"
            ]
        },
        {
            "content_html": "javascript로 이해하는 자료구조 [연결리스트(linked-list)] : 연결리스트(linked-list)는 리스트의 일종으로 노드(node)와 데이터가 포인터(pointer)를 가지고 한 줄로 이어져있는 형태를 띈다. 자료의 추가 및 삭제 시간복잡도가 O(1)이나 다른 자료형보다 저장공간을 많이 차지하는 단점이 있다.",
            "url": "http://localhost:3000/posts/17",
            "title": "[자료구조] 연결리스트(linked_list) | javascript",
            "summary": "javascript로 이해하는 자료구조 [연결리스트(linked-list)] : 연결리스트(linked-list)는 리스트의 일종으로 노드(node)와 데이터가 포인터(pointer)를 가지고 한 줄로 이어져있는 형태를 띈다. 자료의 추가 및 삭제 시간복잡도가 O(1)이나 다른 자료형보다 저장공간을 많이 차지하는 단점이 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_dataStructure.webp",
            "date_modified": "2023-04-25T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "자료구조",
                "연결리스트",
                "linked_list",
                "javascript",
                "JS"
            ]
        },
        {
            "content_html": "에라토스테네스의 체는 소수를 효과적으로 판별하는 방법 중 하나로 가장 잘 알려진 방법이기도 하다. 가장 작은 소수인 2부터 소수의 배수를 소거해 나가며 소수를 구할 수 있다.",
            "url": "http://localhost:3000/posts/18",
            "title": "[수학] 에라토스테네스의 체를 이용한 소수 구하기",
            "summary": "에라토스테네스의 체는 소수를 효과적으로 판별하는 방법 중 하나로 가장 잘 알려진 방법이기도 하다. 가장 작은 소수인 2부터 소수의 배수를 소거해 나가며 소수를 구할 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/js_algorithm.webp",
            "date_modified": "2023-04-27T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "알고리즘",
                "JS",
                "javascript",
                "소수",
                "에라토스테네스의체",
                "math"
            ]
        },
        {
            "content_html": "프로그래머스 lv.2 올바른 괄호 풀이 with javascript. 스택 자료형을 이용해 문제를 해결한다. 괄호의 시작에 해당하는 문자일 경우 stack에 push하고 괄호의 끝을 해당하는 문자일 경우 stack의 top(마지막 원소)와 비교하여 올바를 경우 pop을 진행, 그렇지 않으면 무시한다.",
            "url": "http://localhost:3000/posts/19",
            "title": "[lv.2] 올바른 괄호 | 프로그래머스",
            "summary": "프로그래머스 lv.2 올바른 괄호 풀이 with javascript. 스택 자료형을 이용해 문제를 해결한다. 괄호의 시작에 해당하는 문자일 경우 stack에 push하고 괄호의 끝을 해당하는 문자일 경우 stack의 top(마지막 원소)와 비교하여 올바를 경우 pop을 진행, 그렇지 않으면 무시한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-05-04T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "알고리즘",
                "코딩테스트",
                "스택"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 덧칠하기 풀이 with javascript. 덧칠 해야할 영역이 true, 그렇지 않은 영역이 false인 길이 n인 배열을 선언한 후 해당 배열을 순회하며 롤러의 길이 m만큼 덧칠을 수행한다.",
            "url": "http://localhost:3000/posts/20",
            "title": "[lv.1] 덧칠하기 | 프로그래머스",
            "summary": "프로그래머스 lv.1 덧칠하기 풀이 with javascript. 덧칠 해야할 영역이 true, 그렇지 않은 영역이 false인 길이 n인 배열을 선언한 후 해당 배열을 순회하며 롤러의 길이 m만큼 덧칠을 수행한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-05-06T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 과일장수 풀이 with javascript. 그리디 알고리즘을 활용하는 문제이다. 점수가 높은 사과끼리 묶어서 담는 것이 가장 이득이므로 score를 내림차순 정렬하여 m만큼 자르고 분리된 배열의 원소 중 최소값을 구해 가격을 계산한다.",
            "url": "http://localhost:3000/posts/21",
            "title": "[lv.1] 과일장수 | 프로그래머스",
            "summary": "프로그래머스 lv.1 과일장수 풀이 with javascript. 그리디 알고리즘을 활용하는 문제이다. 점수가 높은 사과끼리 묶어서 담는 것이 가장 이득이므로 score를 내림차순 정렬하여 m만큼 자르고 분리된 배열의 원소 중 최소값을 구해 가격을 계산한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-05-09T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 푸드 파이트 대회 풀이 with javascript. 덱(dedque) 자료형을 활용하는 문제이다. 음식을 덱의 head와 tail에 조건에 맞게 삽입하여 문제를 해결한다.",
            "url": "http://localhost:3000/posts/22",
            "title": "[lv.1] 푸드 파이트 대회 | 프로그래머스",
            "summary": "프로그래머스 lv.1 푸드 파이트 대회 풀이 with javascript. 덱(dedque) 자료형을 활용하는 문제이다. 음식을 덱의 head와 tail에 조건에 맞게 삽입하여 문제를 해결한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-05-10T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘",
                "덱",
                "deque"
            ]
        },
        {
            "content_html": "frequency counter 패턴은 hash를 활용하는 패턴으로 빈도수를 측정하고 비교하는데 사용된다. javascript에서는 객체 혹은 Map 자료형을 이용해 구현할 수 있다. 단순 배열을 이용하는것 보다 시간복잡도를 눈에띄게 줄일 수 있다.",
            "url": "http://localhost:3000/posts/23",
            "title": "[문제해결] frequency Counter 패턴",
            "summary": "frequency counter 패턴은 hash를 활용하는 패턴으로 빈도수를 측정하고 비교하는데 사용된다. javascript에서는 객체 혹은 Map 자료형을 이용해 구현할 수 있다. 단순 배열을 이용하는것 보다 시간복잡도를 눈에띄게 줄일 수 있다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/js_algorithm.webp",
            "date_modified": "2023-05-11T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "알고리즘",
                "JS",
                "javascript",
                "문제해결",
                "패턴",
                "frequency_counter"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 대충 만든 자판 풀이 with javascript. javascript 객체를 이용해 keymap에 존재하는 알파벳의 index를 기록하되 가장 최단거리에 해당하는 키캡의 index를 기록하여 통합된 자판을 생성하여 문제를 해결한다.",
            "url": "http://localhost:3000/posts/24",
            "title": "[lv.1] 대충 만든 자판 | 프로그래머스",
            "summary": "프로그래머스 lv.1 대충 만든 자판 풀이 with javascript. javascript 객체를 이용해 keymap에 존재하는 알파벳의 index를 기록하되 가장 최단거리에 해당하는 키캡의 index를 기록하여 통합된 자판을 생성하여 문제를 해결한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-05-28T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘",
                "구현"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 개인정보 수집 유효기간 풀이 with javascript. 해당 문제에서 한달은 28일로 고정이다. 따라서 today와 privacies 각 원소(개인정보)의 날짜를 년, 월, 일에 각 단위에 해당하는 수 * 28을 수행하여 일 단위로 변환한 후 terms에 해당하는 수를 더해 문제를 해결한다.",
            "url": "http://localhost:3000/posts/25",
            "title": "[lv.1] 개인정보 수집 유효기간",
            "summary": "프로그래머스 lv.1 개인정보 수집 유효기간 풀이 with javascript. 해당 문제에서 한달은 28일로 고정이다. 따라서 today와 privacies 각 원소(개인정보)의 날짜를 년, 월, 일에 각 단위에 해당하는 수 * 28을 수행하여 일 단위로 변환한 후 terms에 해당하는 수를 더해 문제를 해결한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-05-30T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘",
                "구현",
                "kakao"
            ]
        },
        {
            "content_html": "프로그래머스 lv.1 성격 유형 검사하기 풀이 with javascript. javascript의 객체를 이용해 성격 유형(이하 MBTI)별 획득 점수를 기록하고 MBTI의 value를 비교해 문제를 해결한다.",
            "url": "http://localhost:3000/posts/26",
            "title": "[lv.1] 성격 유형 검사하기 | 프로그래머스",
            "summary": "프로그래머스 lv.1 성격 유형 검사하기 풀이 with javascript. javascript의 객체를 이용해 성격 유형(이하 MBTI)별 획득 점수를 기록하고 MBTI의 value를 비교해 문제를 해결한다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-06-01T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘",
                "구현"
            ]
        },
        {
            "content_html": "프로그래머스 lv.2 주차 요금 계산 풀이 with javascript. javascript의 객체를 이용해 차량의 입/출차 시간을 기록, 해당 객체를 순회하며 주차시간을 주어진 요금표에 맞게 정산하는 것으로 문제를 해결한다. ",
            "url": "http://localhost:3000/posts/27",
            "title": "[lv.2] 주차 요금 계산 | 프로그래머스",
            "summary": "프로그래머스 lv.2 주차 요금 계산 풀이 with javascript. javascript의 객체를 이용해 차량의 입/출차 시간을 기록, 해당 객체를 순회하며 주차시간을 주어진 요금표에 맞게 정산하는 것으로 문제를 해결한다. ",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/JS_programmers.webp",
            "date_modified": "2023-06-03T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "프로그래머스",
                "JS",
                "javascript",
                "코딩테스트",
                "알고리즘",
                "구현"
            ]
        },
        {
            "content_html": "마크다운에서 이미지를 첨부하기 위해선 img태그의 src에 url을 전달하듯 url 형식의 문자열을 전달해야 합니다. 때문에 README를 작성하거나 저처럼 블로그 등지에서 마크다운을 활용하는 경우 첨부하고자 하는 이미지의 전처리 과정이 요구됩니다. 이미지 파일을 base64 형식으로 인코딩하여 안전한 문자열로 사용할 수 있습니다. HTTP 통신에서 JSON 형태의 통신을 위해 base64 형태로 인코딩할 필요가 있습니다. blob 객체 또한 이용 가능합니다. js의 내부 메소드로 간단하게 blob 객체로 인코딩, 브라우저에서 가상 url을 생성할 수 있습니다.",
            "url": "http://localhost:3000/posts/28",
            "title": "[next.js] CDN 서버를 활용한 Markdown 이미지 첨부(1)",
            "summary": "마크다운에서 이미지를 첨부하기 위해선 img태그의 src에 url을 전달하듯 url 형식의 문자열을 전달해야 합니다. 때문에 README를 작성하거나 저처럼 블로그 등지에서 마크다운을 활용하는 경우 첨부하고자 하는 이미지의 전처리 과정이 요구됩니다. 이미지 파일을 base64 형식으로 인코딩하여 안전한 문자열로 사용할 수 있습니다. HTTP 통신에서 JSON 형태의 통신을 위해 base64 형태로 인코딩할 필요가 있습니다. blob 객체 또한 이용 가능합니다. js의 내부 메소드로 간단하게 blob 객체로 인코딩, 브라우저에서 가상 url을 생성할 수 있습니다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/myblog_thumbnail.webp",
            "date_modified": "2023-11-11T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "javascript",
                "이미지",
                "CDN",
                "next.js",
                "문제해결",
                "base64",
                "blob",
                "url",
                "markdown",
                "md"
            ]
        },
        {
            "content_html": "안전한 HTTP 통신을 위해 이미지 파일을 base64 형태로 인코딩, next.js 서버단에서 CDN 서버에 업로드 하는것이 이상적입니다. github issue에 이미지를 등록하는것은 CDN 서버를 구성할 필요 없이 간편하게 이미지를 업로드 할 수 있지만 궁극적인 해결방안은 아닙니다. 네이버 클라우드 플랫폼의 CDN+와 Object Storage, AWS S3 bucket를 이용해 CDN 서버를 구성합니다. 네이버 클라우드 플랫폼의 API 인증키를 발급받고 서비스 사용 신청을 합니다.",
            "url": "http://localhost:3000/posts/29",
            "title": "[next.js] 네이버 CDN 서버를 활용한 Markdown 이미지 첨부(2)",
            "summary": "안전한 HTTP 통신을 위해 이미지 파일을 base64 형태로 인코딩, next.js 서버단에서 CDN 서버에 업로드 하는것이 이상적입니다. github issue에 이미지를 등록하는것은 CDN 서버를 구성할 필요 없이 간편하게 이미지를 업로드 할 수 있지만 궁극적인 해결방안은 아닙니다. 네이버 클라우드 플랫폼의 CDN+와 Object Storage, AWS S3 bucket를 이용해 CDN 서버를 구성합니다. 네이버 클라우드 플랫폼의 API 인증키를 발급받고 서비스 사용 신청을 합니다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/myblog_thumbnail.webp",
            "date_modified": "2023-11-13T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "javascript",
                "이미지",
                "CDN",
                "next.js",
                "문제해결",
                "markdown",
                "md",
                "naver",
                "AWS"
            ]
        },
        {
            "content_html": "AWS S3에서 제공하는 javascript SDK를 이용해 node.js 환경에서 파일(이미지)를 api 요청을 통해 전송해보겠습니다. @aws-sdk/client-s3 모듈을 설치 후 next.js의 원하는 api 엔드포인트에서 route.ts를 작성합니다. S3 클라이언트에 연결하기 위한 객체를 선언하고 접근권한(ACL), 경로 등을 설정하고 Buffer 객체에 이미지를 담아 S3에 전송합니다. 바이너리 데이터로 이미지를 변환해 api의 요청사항을 만족시킵니다. 이미지를 별도의 DB에 분산저장(백업) 하여 데이터의 무결성을 유지합니다.",
            "url": "http://localhost:3000/posts/30",
            "title": "네이버 CDN 서버를 활용한 Markdown 이미지 첨부(3)",
            "summary": "AWS S3에서 제공하는 javascript SDK를 이용해 node.js 환경에서 파일(이미지)를 api 요청을 통해 전송해보겠습니다. @aws-sdk/client-s3 모듈을 설치 후 next.js의 원하는 api 엔드포인트에서 route.ts를 작성합니다. S3 클라이언트에 연결하기 위한 객체를 선언하고 접근권한(ACL), 경로 등을 설정하고 Buffer 객체에 이미지를 담아 S3에 전송합니다. 바이너리 데이터로 이미지를 변환해 api의 요청사항을 만족시킵니다. 이미지를 별도의 DB에 분산저장(백업) 하여 데이터의 무결성을 유지합니다.",
            "image": "https://choco-image-server.cdn.ntruss.com/thumbnail/myblog_thumbnail.webp",
            "date_modified": "2023-12-16T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "javascript",
                "CDN",
                "next.js",
                "markdown",
                "AWS",
                "S3",
                "mongoDB",
                "데이터무결성"
            ]
        },
        {
            "content_html": "next.js 13 이상의 버전에서 mongoDB와 계층형 트리구조를 활용한 무한 대댓글을 구현하였습니다. 댓글가 대댓글의 그룹으로 묶어 관리하는 REF, 댓글의 순서를 결정하는 RE_STEP, 댓글의 들여쓰기 레벨을 의미하는 RE_LEVEL, 부모 댓글의 고유 식별자를 의미하는 RE_PARENT 총 4개의 속성을 이용해 자동으로 대댓글의 위치를 조정하도록 하였습니다. 클라이언트에서는 React의 hooks를 활용해 interactive한 사용자 경험을 제공하고 next.js의 serverless function을 활용해 대댓글 작성 api를 손쉽게 구현하였습니다.",
            "url": "http://localhost:3000/posts/31",
            "title": "Next.js 13+에서 무한 대댓글 구현 (with mongoDB)",
            "summary": "next.js 13 이상의 버전에서 mongoDB와 계층형 트리구조를 활용한 무한 대댓글을 구현하였습니다. 댓글가 대댓글의 그룹으로 묶어 관리하는 REF, 댓글의 순서를 결정하는 RE_STEP, 댓글의 들여쓰기 레벨을 의미하는 RE_LEVEL, 부모 댓글의 고유 식별자를 의미하는 RE_PARENT 총 4개의 속성을 이용해 자동으로 대댓글의 위치를 조정하도록 하였습니다. 클라이언트에서는 React의 hooks를 활용해 interactive한 사용자 경험을 제공하고 next.js의 serverless function을 활용해 대댓글 작성 api를 손쉽게 구현하였습니다.",
            "image": "https://choco-image-server.cdn.ntruss.com/images/Frame_1.png",
            "date_modified": "2024-01-04T00:00:00.000Z",
            "author": {
                "name": "ChocoHam(@banma1234)",
                "url": "https://github.com/banma1234"
            },
            "tags": [
                "next.js",
                "mongoDB",
                "무한대댓글",
                "대댓글",
                "typescript",
                "트리",
                "계층형트리"
            ]
        }
    ]
}